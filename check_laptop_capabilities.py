#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –Ω–æ—É—Ç–±—É–∫–∞ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Secure Messenger
"""

import socket
import subprocess
import sys
import platform
import psutil
import os

def get_system_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ"""
    print("üñ•Ô∏è  –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï:")
    print("=" * 50)
    
    # –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
    print(f"OS: {platform.system()} {platform.release()}")
    print(f"–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {platform.architecture()[0]}")
    print(f"–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {platform.processor()}")
    
    # –ü–∞–º—è—Ç—å
    memory = psutil.virtual_memory()
    print(f"RAM: {memory.total / (1024**3):.1f} GB (–¥–æ—Å—Ç—É–ø–Ω–æ: {memory.available / (1024**3):.1f} GB)")
    
    # –î–∏—Å–∫
    disk = psutil.disk_usage('/')
    print(f"–î–∏—Å–∫: {disk.total / (1024**3):.1f} GB (—Å–≤–æ–±–æ–¥–Ω–æ: {disk.free / (1024**3):.1f} GB)")
    
    print()

def get_network_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ç–µ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
    print("üåê –°–ï–¢–ï–í–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
    print("=" * 50)
    
    try:
        # –õ–æ–∫–∞–ª—å–Ω—ã–π IP
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        local_ip = s.getsockname()[0]
        s.close()
        print(f"–õ–æ–∫–∞–ª—å–Ω—ã–π IP: {local_ip}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.settimeout(5)
        result = s.connect_ex(("8.8.8.8", 53))
        s.close()
        
        if result == 0:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É: –ï–°–¢–¨")
        else:
            print("‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É: –ù–ï–¢")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ç–µ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")
    
    print()

def check_port_availability(port=8080):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞"""
    print(f"üîå –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–ê {port}:")
    print("=" * 50)
    
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.settimeout(1)
        result = s.connect_ex(('localhost', port))
        s.close()
        
        if result == 0:
            print(f"‚ùå –ü–æ—Ä—Ç {port} –∑–∞–Ω—è—Ç")
            return False
        else:
            print(f"‚úÖ –ü–æ—Ä—Ç {port} —Å–≤–æ–±–æ–¥–µ–Ω")
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞: {e}")
        return False

def check_firewall():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞"""
    print("üî• –ü–†–û–í–ï–†–ö–ê –ë–†–ê–ù–î–ú–ê–£–≠–†–ê:")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞ Windows
        result = subprocess.run(['netsh', 'advfirewall', 'show', 'allprofiles', 'state'], 
                              capture_output=True, text=True)
        
        if result.returncode == 0:
            output = result.stdout
            if "ON" in output:
                print("‚ö†Ô∏è  –ë—Ä–∞–Ω–¥–º–∞—É—ç—Ä Windows –≤–∫–ª—é—á–µ–Ω")
                print("üí° –í–æ–∑–º–æ–∂–Ω–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç 8080")
            else:
                print("‚úÖ –ë—Ä–∞–Ω–¥–º–∞—É—ç—Ä Windows –æ—Ç–∫–ª—é—á–µ–Ω")
        else:
            print("‚ùì –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞: {e}")
    
    print()

def check_python_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python"""
    print("üêç –ü–†–û–í–ï–†–ö–ê PYTHON –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô:")
    print("=" * 50)
    
    dependencies = [
        'PyQt6',
        'cryptography', 
        'pyperclip',
        'psutil'
    ]
    
    missing = []
    for dep in dependencies:
        try:
            __import__(dep)
            print(f"‚úÖ {dep}")
        except ImportError:
            print(f"‚ùå {dep} - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            missing.append(dep)
    
    if missing:
        print(f"\nüí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
        print(f"pip install {' '.join(missing)}")
    
    print()

def test_server_performance():
    """–¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
    print("‚ö° –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò:")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º CPU
    cpu_percent = psutil.cpu_percent(interval=1)
    print(f"CPU –∑–∞–≥—Ä—É–∑–∫–∞: {cpu_percent}%")
    
    if cpu_percent < 50:
        print("‚úÖ CPU: –•–æ—Ä–æ—à–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
    elif cpu_percent < 80:
        print("‚ö†Ô∏è  CPU: –°—Ä–µ–¥–Ω—è—è –∑–∞–≥—Ä—É–∑–∫–∞")
    else:
        print("‚ùå CPU: –í—ã—Å–æ–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å
    memory = psutil.virtual_memory()
    memory_percent = memory.percent
    
    print(f"RAM –∑–∞–≥—Ä—É–∑–∫–∞: {memory_percent}%")
    
    if memory_percent < 70:
        print("‚úÖ RAM: –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏")
    elif memory_percent < 90:
        print("‚ö†Ô∏è  RAM: –°—Ä–µ–¥–Ω—è—è –∑–∞–≥—Ä—É–∑–∫–∞")
    else:
        print("‚ùå RAM: –ú–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–π –ø–∞–º—è—Ç–∏")
    
    print()

def get_recommendations():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
    print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É
    memory = psutil.virtual_memory()
    cpu_count = psutil.cpu_count()
    
    print("üìä –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –í–ê–®–ï–ì–û –ù–û–£–¢–ë–£–ö–ê:")
    
    if memory.total >= 4 * 1024**3:  # 4GB
        print("‚úÖ RAM: –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞")
    else:
        print("‚ö†Ô∏è  RAM: –ú–∞–ª–æ –ø–∞–º—è—Ç–∏, –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã")
    
    if cpu_count >= 2:
        print("‚úÖ CPU: –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —è–¥–µ—Ä")
    else:
        print("‚ö†Ô∏è  CPU: –ú–∞–ª–æ —è–¥–µ—Ä, –≤–æ–∑–º–æ–∂–Ω—ã –∑–∞–¥–µ—Ä–∂–∫–∏")
    
    print("\nüåê –í–ê–†–ò–ê–ù–¢–´ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø:")
    print("1. üè† –õ–û–ö–ê–õ–¨–ù–ê–Ø –°–ï–¢–¨:")
    print("   - –î—Ä—É–∑—å—è –≤ —Ç–æ–π –∂–µ Wi-Fi —Å–µ—Ç–∏")
    print("   - –ü—Ä–æ—Å—Ç–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ IP")
    print("   - –ù–µ —Ç—Ä–µ–±—É–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞")
    
    print("\n2. üåç –ò–ù–¢–ï–†–ù–ï–¢ (–≤–∞—à –Ω–æ—É—Ç–±—É–∫ –∫–∞–∫ —Å–µ—Ä–≤–µ—Ä):")
    print("   - –î—Ä—É–∑—å—è –∏–∑ –¥—Ä—É–≥–∏—Ö –≥–æ—Ä–æ–¥–æ–≤")
    print("   - –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ—É—Ç–µ—Ä–∞")
    print("   - –ù—É–∂–µ–Ω —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP –∏–ª–∏ DDNS")
    
    print("\n3. ‚òÅÔ∏è  –û–ë–õ–ê–ß–ù–´–ô –•–û–°–¢–ò–ù–ì:")
    print("   - Heroku, Railway, Render (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)")
    print("   - –ù–µ –Ω–∞–≥—Ä—É–∂–∞–µ—Ç –≤–∞—à –Ω–æ—É—Ç–±—É–∫")
    print("   - –í—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω")
    
    print("\n4. üöá NGROK (—Ç—É–Ω–Ω–µ–ª—å):")
    print("   - –ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
    print("   - –í—Ä–µ–º–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø")
    print("   - –ù–µ —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏")
    
    print()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –í–û–ó–ú–û–ñ–ù–û–°–¢–ï–ô –ù–û–£–¢–ë–£–ö–ê –î–õ–Ø SECURE MESSENGER")
    print("=" * 70)
    print()
    
    try:
        get_system_info()
        get_network_info()
        check_port_availability()
        check_firewall()
        check_python_dependencies()
        test_server_performance()
        get_recommendations()
        
        print("üéØ –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê:")
        print("=" * 50)
        
        # –ü—Ä–æ—Å—Ç–∞—è –æ—Ü–µ–Ω–∫–∞
        memory = psutil.virtual_memory()
        cpu_count = psutil.cpu_count()
        
        score = 0
        if memory.total >= 4 * 1024**3:
            score += 1
        if cpu_count >= 2:
            score += 1
        if check_port_availability():
            score += 1
        
        if score >= 2:
            print("‚úÖ –í–ê–® –ù–û–£–¢–ë–£–ö –ü–û–î–•–û–î–ò–¢ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞!")
            print("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: –ª–æ–∫–∞–ª—å–Ω–∞—è —Å–µ—Ç—å –∏–ª–∏ ngrok")
        else:
            print("‚ö†Ô∏è  –í–ê–® –ù–û–£–¢–ë–£–ö –ú–û–ñ–ï–¢ –ò–ú–ï–¢–¨ –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø")
            print("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: –æ–±–ª–∞—á–Ω—ã–π —Ö–æ—Å—Ç–∏–Ω–≥")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

